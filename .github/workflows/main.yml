# name: linting, testing, building
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]
# jobs:
#   pipelines:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [16.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Starting Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: pnpm ci --force
#       - name: build production project
#         run: pnpm run build:prod
#         if: always()
#       - name: linting typescript
#         run: pnpm run lint:ts
#         if: always()
#       - name: linting scss
#         run: pnpm run lint:scss
#         if: always()
#       - name: linting unit testing
#         run: pnpm run test:unit
#         if: always()
#       - name: build storybook
#         run: pnpm run storybook:build
#         if: always()
#       - name: screenshot testing
#         run: pnpm run test:ui:ci
#         if: always()

# —á—Ç–æ–± –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å —Å–∫—Ä–∏–Ω—à–æ—Ç–Ω—ã–º–∏ —Ç–µ—Å—Ç–∞–º–∏, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞–π–ø–ª–∞–π–Ω—ã
name: linting, testing, building
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: 'pages'
  cancel-in-progress: true
jobs:
  # –¥–∂–æ–±–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: install modules
        run: pnpm install
      - name: build production project
        run: pnpm run build:prod
        if: always()
      - name: build storybook
        run: pnpm run build-storybook
        if: always()
      # - name: screenshot testing
      #   run: pnpm run test:ui:ci
      #   if: always()
      - name: unit testing
        if: always()
        run: pnpm run test:unit
      # - name: chromatic testing
      #   if: always()
      #   run: pnpm run chromatic
      # - name: Generate HTML report
      #   run: pnpm run test:ui:report
      #   if: always()
      # - name: move loki
      #   run: mv .loki reports/
      #   if: always()
      # - name: Setup Pages
      #   uses: actions/configure-pages@v2
      #   if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: 'reports'
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v1

  # –¥–∂–æ–±–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç —Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: install modules
        run: pnpm install
      - name: linting typescript
        run: pnpm run lint:ts
        if: always()
      - name: linting css
        run: pnpm run lint:scss
